/*==============================================================*/
/* Table: ATTACHMENTS                                           */
/*==============================================================*/
create table ATTACHMENTS
(
   ATTACHMENTS_ID       integer(6) not null auto_increment comment '附件标识',
   ATTACHMENTS_TYPE     varchar(20) not null comment '附件类型',
   ATTACHMENTS_NAME     varchar(60) not null comment '附件文件名',
   IS_REMOTE            char(1) not null comment '是否为远程文件',
   FILE_SIZE            bigint(10) comment '文件大小',
   FILE_PATH            varchar(255) not null comment '文件路径',
   DOWNLOADS_NUM        integer(8) not null comment '下载次数',
   IS_PICTURE           char(1) not null comment '是否是图片',
   IS_THUMB             char(1) not null comment '是否生成缩略图',
   THUMB_PATH           varchar(255) comment '缩略图地址',
   CREATE_TIME          datetime not null comment '创建时间',
   EXP_TIME             datetime comment '失效时间',
   primary key (ATTACHMENTS_ID)
)


/*==============================================================*/
/* Table: ATTR                                                  */
/*==============================================================*/
create table ATTR
(
   ATTR_ID              integer(6) not null auto_increment comment '属性标识',
   ATTR_NAME            varchar(60) not null comment '名称',
   ATTR_TYPE            char(1) not null comment '属性类型',
   PARENT_ATTR_ID       integer(4) comment '父属性标识',
   ATTR_CODE            varchar(120) not null comment '属性代码',
   VISIBLE              char(1) not null comment '是否可见',
   INSTANTIATABLE       char(1) not null comment '是否可实例化',
   DEFAULT_VALUE        varchar(120) comment '缺省值',
   INPUT_TYPE           char(1) not null comment '输入方式',
   DATA_TYPE            char(1) not null comment '数据类型',
   VALUE_SCRIPT         varchar(2000) comment '取值校验规则',
   primary key (ATTR_ID)
)

/*==============================================================*/
/* Table: ATTR_VALUE                                            */
/*==============================================================*/
create table ATTR_VALUE
(
   ATTR_ID              integer(6) not null auto_increment comment '属性标识',
   ATTR_VALUE_ID        integer(6) not null comment '属性值标识',
   VALUE_MARK           varchar(60) not null comment '取值说明',
   VALUE                varchar(120) comment '取值',
   LINK_ATTR_ID         integer(6) comment '联动属性标识',
   primary key (ATTR_ID, ATTR_VALUE_ID)
)





/*==============================================================*/
/* Table: EVENT                                                 */
/*==============================================================*/
create table EVENT
(
   EVENT_ID             integer(4) not null comment '事件标识',
   EVENT_TYPE           char(1) not null comment '事件类型',
   PARAMS_NAME          varchar(120) comment '参数名',
   EVENT_NAME           varchar(20) not null comment '事件名称',
   REMARK               varchar(120) comment '备注',
   primary key (EVENT_ID)
)




Query:
/*==============================================================*/
/* Table: MENU                                                  */
/*==============================================================*/
create table MENU
(
   RESOURCE_ID          integer(6) not null auto_increment comment '菜单标识',
   PARENT_RESOURCE_ID   integer(4) comment '父菜单标识',
   SEQ                  integer(4) not null comment '序列',
   MENU_NAME            varchar(20) not null comment '菜单名称',
   URL                  varchar(120) not null comment '访问地址',
   IS_LEAF              char(1) not null comment '是否为叶节点',
   ICON_URL             varchar(120) comment '图标URL',
   primary key (RESOURCE_ID)
)

Error occured at:2015-12-03 16:17:09
Line no.:452
Error Code: 1050 - Table 'menu' already exists

Query:
/*==============================================================*/
/* Table: MENU_URL_RESOURCE                                     */
/*==============================================================*/
create table MENU_URL_RESOURCE
(
   RESOURCE_ID          integer(6) not null comment '菜单标识',
   URL_RESOURCE_ID      integer(6) not null comment 'URL_资源标识',
   ALLOW_SHOW           char(1) not null,
   IS_SELECT            char(1) not null,
   primary key (RESOURCE_ID, URL_RESOURCE_ID)
)




/*==============================================================*/
/* Table: MESSAGE_ATTACHMENTS                                   */
/*==============================================================*/
create table MESSAGE_ATTACHMENTS
(
   ATTACHMENTS_ID       bigint(10) not null comment '附件标识',
   MESSAGE_ID           bigint(10) not null comment '消息标识',
   primary key (ATTACHMENTS_ID, MESSAGE_ID)
)


/*==============================================================*/
/* Table: MESSAGE_BOX                                           */
/*==============================================================*/
create table MESSAGE_BOX
(
   MESSAGE_ID           integer(6) not null auto_increment comment '消息标识',
   RECEIVERS            text not null comment '收件人',
   SENDER               varchar(120) comment '发件人',
   MESSAGE_TEMPLATE_ID  integer(4) not null comment '消息模板标识',
   SUBJECT              varchar(120) comment '标题',
   CONTENT              text comment '内容',
   ATTACHMENTS_NUM      smallint(3) not null comment '附件数量',
   CREATE_TIME          datetime not null comment '创建时间',
   SEND_TIME            datetime comment '最后一次发送时间',
   NEXT_SEND_TIME       datetime comment '下一次发送时间',
   SEND_TIMES           integer(4) not null comment '发送次数',
   EXTEND_ATTRS         text comment '扩展参数',
   primary key (MESSAGE_ID)
)

create table MESSAGE_HISTORY
(
   MESSAGE_ID           bigint(10) not null auto_increment comment '消息标识',
   RECEIVERS            text not null comment '收件人',
   SENDER               varchar(120) comment '发件人',
   MESSAGE_TYPE         char(1) not null comment '消息类型',
   MESSAGE_TEMPLATE_ID  integer(4) not null comment '消息模板标识',
   SUBJECT              varchar(120) comment '标题',
   CONTENT              text comment '内容',
   ATTACHMENTS_NUM      integer(4) not null comment '附件数量',
   CREATE_TIME          datetime not null comment '创建时间',
   SEND_TIME            datetime comment '最后一次发送时间',
   SEND_TIMES           integer(4) not null comment '发送次数',
   RESULT               varchar(255) not null comment '发送结果',
   EXP_DATE             datetime comment '失效时间',
   EXTEND_ATTRS         text comment '扩展参数',
   primary key (MESSAGE_ID)
)


create table MESSAGE_TEMPLATE
(
   MESSAGE_TEMPLATE_ID  integer(6) not null auto_increment comment '消息模板标识',
   MESSAGE_TEMPLATE_CODE varchar(20) not null comment '消息模板代码',
   DIRECTORY_CODE       varchar(20) not null comment '目录代码',
   NAME                 varchar(120) not null comment '名称',
   TEMPLATE             text comment '模板',
   STATE                char(1) not null comment '状态',
   CONTACT_CHANNEL_IDS  varchar(8) comment '接触渠到',
   STATE_TIME           datetime not null comment '状态时间',
   DELAY                integer(6) not null comment '延迟时间(秒)',
   RESEND_TIMES         integer(4) not null comment '失败重发次数',
   SAVE_HISTORY         char(1) not null comment '是否保留历史记录',
   SAVE_DAY             integer(4) not null comment '保留天数',
   CREATE_TIME          datetime comment '创建时间',
   primary key (MESSAGE_TEMPLATE_ID)
)

/*==============================================================*/
/* Table: SEND_RECORD                                           */
/*==============================================================*/
create table SEND_RECORD
(
   SEND_RECORD_ID       bigint(10) not null auto_increment comment '发送记录标识',
   MESSAGE_ID           bigint(10) not null comment '消息标识',
   CONTACT_CHANNEL_ID   smallint(2) not null comment '接触渠到',
   SEND_TIME            datetime not null comment '发送时间',
   RESULT               varchar(255) not null comment '发送结果',
   primary key (SEND_RECORD_ID)
)





/*==============================================================*/
/* Table: MODULE                                                */
/*==============================================================*/
create table MODULE
(
   MODULE_CODE          varchar(10) not null comment '业务模块代码',
   PARENT_MODULE_CODE   varchar(10) comment '父业务模块编码',
   MODULE_NAME          varchar(20) not null comment '业务模块名称',
   primary key (MODULE_CODE)
)



/*==============================================================*/
/* Table: OPERATE_LOG                                           */
/*==============================================================*/
create table OPERATE_LOG
(
   OPERATE_LOG_ID       bigint(10) not null auto_increment comment '操作日志标识',
   EVENT_ID             integer(4) comment '事件标识',
   MODULE_CODE          varchar(10) comment '业务模块代码',
   IP                   varchar(15) comment 'IP地址',
   CREATE_TIME          datetime not null comment '创建时间',
   OPERATOR_ID          integer(8) comment '操作员标识',
   PARAMS_VALUE         varchar(255) comment '参数',
   primary key (OPERATE_LOG_ID)
)



/*==============================================================*/
/* Table: OPERATOR                                              */
/*==============================================================*/
create table OPERATOR
(
   OPERATOR_ID          integer(8) not null comment '操作员标识',
   OPERATOR_TYPE        char(1) not null comment '操作员类型',
   OPERATOR_CODE        integer(8) comment '操作员代码',
   USER_NAME            varchar(60) comment '登录名称',
   PASSWORD             varchar(60) comment '登录密码',
   CREATE_DATE          datetime not null comment '创建时间',
   STATE                char(1) not null comment '状态',
   STATE_DATE           datetime not null comment '状态日期',
   IS_LOCKED            char(1) not null comment '是否锁定',
   PWD_EXP_DATE         datetime comment '密码过期时间',
   REGIST_IP            varchar(16) comment '注册IP',
   LAST_IP              varchar(16) comment '最后访问IP',
   LAST_LOGIN_DATE      datetime comment '最后登录时间',
   ROLE_ID              integer(6),
   LOGIN_FAIL           integer(4) not null,
   primary key (OPERATOR_ID)
)



/*==============================================================*/
/* Table: OPERATOR_HISTORY                                      */
/*==============================================================*/
create table OPERATOR_HISTORY
(
   OPERATOR_ID          integer(8) not null comment '操作员标识',
   SEQ                  integer(8) not null comment '序列',
   OPERATOR_TYPE        char(1) not null comment '操作员类型',
   OPERATOR_CODE        varchar(10) not null comment '操作员代码',
   USER_NAME            varchar(60) comment '登录名称',
   PASSWORD             varchar(60) comment '登录密码',
   CREATE_DATE          datetime not null comment '创建时间',
   STATE                char(1) not null comment '状态',
   STATE_DATE           datetime not null comment '状态日期',
   IS_LOCKED            char(1) not null comment '是否锁定',
   PWD_EXP_DATE         datetime comment '密码过期时间',
   LOGIN_FAIL           integer(4) not null comment '登录失败次数',
   REGIST_IP            varchar(16) comment '注册IP',
   LAST_IP              varchar(16) comment '最后访问IP',
   LAST_LOGIN_DATE      datetime comment '最后登录时间',
   UPDATE_TIME          datetime not null comment '修改时间',
   UPDATE_OPERATOR_ID   integer(8) comment '修改操作员标识',
   primary key (OPERATOR_ID, SEQ)
)




/*==============================================================*/
/* Table: OPERATOR_RESOURCE                                     */
/*==============================================================*/
create table OPERATOR_RESOURCE
(
   OPERATOR_ID          integer(8) not null comment '操作员标识',
   RESOURCE_ID          integer(6) not null comment '资源标识',
   RESOURCE_TYPE        char(1) not null comment '资源类型',
   primary key (OPERATOR_ID, RESOURCE_ID, RESOURCE_TYPE)
)




/*==============================================================*/
/* Table: OPERATOR_ROLE                                         */
/*==============================================================*/
create table OPERATOR_ROLE
(
   ROLE_ID              integer(4) not null comment '角色标识',
   OPERATOR_ID          integer(8) not null comment '操作员标识',
   CREATE_TIME          datetime not null comment '创建时间',
   primary key (ROLE_ID, OPERATOR_ID)
)


/*==============================================================*/
/* Table: OPERATOR_ROLE_HISTORY                                 */
/*==============================================================*/
create table OPERATOR_ROLE_HISTORY
(
   OPERATOR_ID          integer(8) not null comment '操作员标识',
   ROLE_ID              integer(4) not null comment '角色标识',
   SEQ                  integer(4) not null comment '序列',
   CREATE_TIME          datetime not null comment '创建时间',
   UPDATE_TIME          datetime not null comment '修改时间',
   UPDATE_OPERATOR_ID   integer(8) comment '修改人标识',
   primary key (OPERATOR_ID, ROLE_ID, SEQ)
)



/*==============================================================*/
/* Table: ROLE                                                  */
/*==============================================================*/
create table ROLE
(
   ROLE_ID              integer(6) not null auto_increment comment '角色标识',
   MODULE_CODE          varchar(10) comment '业务模块代码',
   ROLE_NAME            varchar(60) not null comment '角色名称',
   CREATE_TIME          datetime not null comment '创建时间',
   OPERATOR_ID          integer(8) comment '创建人标识',
   primary key (ROLE_ID)
)

/*==============================================================*/
/* Table: ROLE_HISTORY                                          */
/*==============================================================*/
create table ROLE_HISTORY
(
   ROLE_ID              integer(4) not null comment '角色标识',
   SEQ                  integer(4) not null comment '序列',
   ROLE_NAME            varchar(60) not null comment '角色名称',
   CREATE_TIME          datetime not null comment '创建时间',
   OPERATOR_ID          integer(8) comment '创建人标识',
   UPDATE_TIME          datetime not null comment '更新时间',
   UPDATE_OPERATOR_ID   integer(8) comment '更新人标识',
   primary key (ROLE_ID, SEQ)
)


/*==============================================================*/
/* Table: ROLE_RESOURCE                                         */
/*==============================================================*/
create table ROLE_RESOURCE
(
   ROLE_ID              integer(4) not null comment '角色标识',
   RESOURCE_ID          integer(8) not null comment '资源标识',
   RESOURCE_TYPE        CHAR(1) not null comment '资源类型',
   primary key (ROLE_ID, RESOURCE_ID, RESOURCE_TYPE)
)


























































